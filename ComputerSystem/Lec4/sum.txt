
sum：     文件格式 elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 a2 2f 00 00    	pushq  0x2fa2(%rip)        # 3fc8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 a4 2f 00 00    	jmpq   *0x2fa4(%rip)        # 3fd0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

Disassembly of section .plt.got:

0000000000001030 <__cxa_finalize@plt>:
    1030:	ff 25 c2 2f 00 00    	jmpq   *0x2fc2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1036:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000001040 <_start>:
    1040:	f3 0f 1e fa          	endbr64 
    1044:	31 ed                	xor    %ebp,%ebp
    1046:	49 89 d1             	mov    %rdx,%r9
    1049:	5e                   	pop    %rsi
    104a:	48 89 e2             	mov    %rsp,%rdx
    104d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1051:	50                   	push   %rax
    1052:	54                   	push   %rsp
    1053:	4c 8d 05 86 01 00 00 	lea    0x186(%rip),%r8        # 11e0 <__libc_csu_fini>
    105a:	48 8d 0d 0f 01 00 00 	lea    0x10f(%rip),%rcx        # 1170 <__libc_csu_init>
    1061:	48 8d 3d f5 00 00 00 	lea    0xf5(%rip),%rdi        # 115d <main>
    1068:	ff 15 72 2f 00 00    	callq  *0x2f72(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    106e:	f4                   	hlt    
    106f:	90                   	nop

0000000000001070 <deregister_tm_clones>:
    1070:	48 8d 3d 99 2f 00 00 	lea    0x2f99(%rip),%rdi        # 4010 <__TMC_END__>
    1077:	55                   	push   %rbp
    1078:	48 8d 05 91 2f 00 00 	lea    0x2f91(%rip),%rax        # 4010 <__TMC_END__>
    107f:	48 39 f8             	cmp    %rdi,%rax
    1082:	48 89 e5             	mov    %rsp,%rbp
    1085:	74 19                	je     10a0 <deregister_tm_clones+0x30>
    1087:	48 8b 05 4a 2f 00 00 	mov    0x2f4a(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    108e:	48 85 c0             	test   %rax,%rax
    1091:	74 0d                	je     10a0 <deregister_tm_clones+0x30>
    1093:	5d                   	pop    %rbp
    1094:	ff e0                	jmpq   *%rax
    1096:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    109d:	00 00 00 
    10a0:	5d                   	pop    %rbp
    10a1:	c3                   	retq   
    10a2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    10a9:	00 00 00 00 
    10ad:	0f 1f 00             	nopl   (%rax)

00000000000010b0 <register_tm_clones>:
    10b0:	48 8d 3d 59 2f 00 00 	lea    0x2f59(%rip),%rdi        # 4010 <__TMC_END__>
    10b7:	48 8d 35 52 2f 00 00 	lea    0x2f52(%rip),%rsi        # 4010 <__TMC_END__>
    10be:	55                   	push   %rbp
    10bf:	48 29 fe             	sub    %rdi,%rsi
    10c2:	48 89 e5             	mov    %rsp,%rbp
    10c5:	48 c1 fe 03          	sar    $0x3,%rsi
    10c9:	48 89 f0             	mov    %rsi,%rax
    10cc:	48 c1 e8 3f          	shr    $0x3f,%rax
    10d0:	48 01 c6             	add    %rax,%rsi
    10d3:	48 d1 fe             	sar    %rsi
    10d6:	74 18                	je     10f0 <register_tm_clones+0x40>
    10d8:	48 8b 05 11 2f 00 00 	mov    0x2f11(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    10df:	48 85 c0             	test   %rax,%rax
    10e2:	74 0c                	je     10f0 <register_tm_clones+0x40>
    10e4:	5d                   	pop    %rbp
    10e5:	ff e0                	jmpq   *%rax
    10e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    10ee:	00 00 
    10f0:	5d                   	pop    %rbp
    10f1:	c3                   	retq   
    10f2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    10f9:	00 00 00 00 
    10fd:	0f 1f 00             	nopl   (%rax)

0000000000001100 <__do_global_dtors_aux>:
    1100:	80 3d 09 2f 00 00 00 	cmpb   $0x0,0x2f09(%rip)        # 4010 <__TMC_END__>
    1107:	75 2f                	jne    1138 <__do_global_dtors_aux+0x38>
    1109:	48 83 3d e7 2e 00 00 	cmpq   $0x0,0x2ee7(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1110:	00 
    1111:	55                   	push   %rbp
    1112:	48 89 e5             	mov    %rsp,%rbp
    1115:	74 0c                	je     1123 <__do_global_dtors_aux+0x23>
    1117:	48 8b 3d ea 2e 00 00 	mov    0x2eea(%rip),%rdi        # 4008 <__dso_handle>
    111e:	e8 0d ff ff ff       	callq  1030 <__cxa_finalize@plt>
    1123:	e8 48 ff ff ff       	callq  1070 <deregister_tm_clones>
    1128:	c6 05 e1 2e 00 00 01 	movb   $0x1,0x2ee1(%rip)        # 4010 <__TMC_END__>
    112f:	5d                   	pop    %rbp
    1130:	c3                   	retq   
    1131:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1138:	f3 c3                	repz retq 
    113a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000001140 <frame_dummy>:
    1140:	55                   	push   %rbp
    1141:	48 89 e5             	mov    %rsp,%rbp
    1144:	5d                   	pop    %rbp
    1145:	e9 66 ff ff ff       	jmpq   10b0 <register_tm_clones>

000000000000114a <plus>:
    114a:	48 8d 04 37          	lea    (%rdi,%rsi,1),%rax
    114e:	c3                   	retq   

000000000000114f <sumstore>:
    114f:	53                   	push   %rbx
    1150:	48 89 d3             	mov    %rdx,%rbx
    1153:	e8 f2 ff ff ff       	callq  114a <plus>
    1158:	48 89 03             	mov    %rax,(%rbx)
    115b:	5b                   	pop    %rbx
    115c:	c3                   	retq   

000000000000115d <main>:
    115d:	b8 00 00 00 00       	mov    $0x0,%eax
    1162:	c3                   	retq   
    1163:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    116a:	00 00 00 
    116d:	0f 1f 00             	nopl   (%rax)

0000000000001170 <__libc_csu_init>:
    1170:	f3 0f 1e fa          	endbr64 
    1174:	41 57                	push   %r15
    1176:	4c 8d 3d 73 2c 00 00 	lea    0x2c73(%rip),%r15        # 3df0 <__frame_dummy_init_array_entry>
    117d:	41 56                	push   %r14
    117f:	49 89 d6             	mov    %rdx,%r14
    1182:	41 55                	push   %r13
    1184:	49 89 f5             	mov    %rsi,%r13
    1187:	41 54                	push   %r12
    1189:	41 89 fc             	mov    %edi,%r12d
    118c:	55                   	push   %rbp
    118d:	48 8d 2d 64 2c 00 00 	lea    0x2c64(%rip),%rbp        # 3df8 <__do_global_dtors_aux_fini_array_entry>
    1194:	53                   	push   %rbx
    1195:	4c 29 fd             	sub    %r15,%rbp
    1198:	48 83 ec 08          	sub    $0x8,%rsp
    119c:	e8 5f fe ff ff       	callq  1000 <_init>
    11a1:	48 c1 fd 03          	sar    $0x3,%rbp
    11a5:	74 1f                	je     11c6 <__libc_csu_init+0x56>
    11a7:	31 db                	xor    %ebx,%ebx
    11a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    11b0:	4c 89 f2             	mov    %r14,%rdx
    11b3:	4c 89 ee             	mov    %r13,%rsi
    11b6:	44 89 e7             	mov    %r12d,%edi
    11b9:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    11bd:	48 83 c3 01          	add    $0x1,%rbx
    11c1:	48 39 dd             	cmp    %rbx,%rbp
    11c4:	75 ea                	jne    11b0 <__libc_csu_init+0x40>
    11c6:	48 83 c4 08          	add    $0x8,%rsp
    11ca:	5b                   	pop    %rbx
    11cb:	5d                   	pop    %rbp
    11cc:	41 5c                	pop    %r12
    11ce:	41 5d                	pop    %r13
    11d0:	41 5e                	pop    %r14
    11d2:	41 5f                	pop    %r15
    11d4:	c3                   	retq   
    11d5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    11dc:	00 00 00 00 

00000000000011e0 <__libc_csu_fini>:
    11e0:	f3 0f 1e fa          	endbr64 
    11e4:	c3                   	retq   

Disassembly of section .fini:

00000000000011e8 <_fini>:
    11e8:	f3 0f 1e fa          	endbr64 
    11ec:	48 83 ec 08          	sub    $0x8,%rsp
    11f0:	48 83 c4 08          	add    $0x8,%rsp
    11f4:	c3                   	retq   
